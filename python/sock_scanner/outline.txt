# I've been given a request from someone to set up a script that looks at a website,
# determines if socks are available for sale, and sends a notification if they are.
# Additional requirements haven't been determined yet, but I imagine I'll need:
# - The website address
# - The page(s) to search for socks on the website
# - The email address to send notifications to
# - The check interval (daily?)
# - Any specific details I should use to filter wanted from unwanted results

# If email notificaions can't be sent, I can leverage existing work with praw to send reddit messages.
# A daily interval should be sufficient.
# The best notifications will be of new additions to stock; no daily inventory lists, no disappearances of stock.
# Specific filter details are included below.

# https://www.nyandcompany.com/search/?Dy=1&Nty=1&Ntp=1&Ntt=socks
#       "We found.*results for.*socks"
# https://www.nyandcompany.com/search/?Dy=1&Nty=1&Ntp=1&Ntt=quijibo
#       "We found 0 results for.*socks"

# Positive result:
#           <div class="container-fixed" style="width:1175px;">
#            <p class="resultFound">
#             We found
#             <span id="filteredRecCount">
#              1
#             </span>
#             results for
#             <strong>
#              socks
#             </strong>
#             .
#            </p>

# Negative result:
#            <div class="container-full" id="noSearchResultNewUI">
#             <div class="row">
#              <h6 class="res_found">
#               We found 0 results for
#               <strong>
#                quijibo
#               </strong>
#               .
#              </h6>
#             </div>

# Next steps:
# - Add __init__ and __main__ stuff to make this look right proper python
# - Add verification of negative result instead of assuming by lack of positive result
# - Work in local stock caching logic so it only notifies on new stock
# - Add notification mechanism and pretty up the text output

